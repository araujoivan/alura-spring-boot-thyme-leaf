
SPRING MIGHT BE ABOUT CONVENTION OVER CONFIGURATION. <--- THE EASIEST PATH


1) Spring-boot-starter-web dependency provides all dependencies needed to deploy a web application including a tomcat container

2) All web application need a container and spring is a set of starters

3) @RequestMapping is a spring-mvc annotation that transform a resource in a accessible route within our application

4) @Controller is a spring-mvc annotation used to specify what class will behave like a controller following a MVC pattern

4) Spring Thymeleaf starter is a default engine that process html templates in order to create view layers following a MVC pattern

5) Model is a object from spring mvc injected as parameter in methods that take @RequestMapping annotation.

6) If you want a hot-deploy:

    a - Add spring-boot-devtools dependency into pom.xml
    b -  Install chrome live-reload plugin ... works like watcher js

7) If you want to generate a war file instead of jar..
 
    a - Change pom.xml tag <packing> from jar to war and 
    b - Run mvn package in command line

8) For changing spring-boot default tomcat by jetty

    a - Exclude tomcat dependency through <exclusions> into pom.xml
    b - Add jetty dependency into pom.xml

9) Packing the application. Generating a FatJar

   a - Add spring-boot-maven-plugin into pom.xml
   b - run   mvn clean
   c - run   mvn package

10) The default Spring EL Expression Language is thymeleaf


11) Through spring-boot-starter-actuator you can retrieve real-time statistics from the application
   
    a - Add spring-boot-starter-actuator into pom.xml
    b - Access for example http://localhost:9000/actuator/health to verify is server is on
    c - Just for spring-boot-web-starter applications
    d - Here we have some useful endpoints specified -> 
        http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#production-ready-endpoints
    e - You can change de default port and ip for spring actuator adding values to management.server.port and 
        management.server.address into application.properties file

12) Killing jetty process
    a - ps -ef | grep jetty


13)  Starter is a default configuration of several tools that compose an useful service

14) In start.spring.io you create a spring java boot-strap project